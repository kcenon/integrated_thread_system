name: Build-Windows-VS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_windows_vs:
    permissions:
      contents: write
    runs-on: windows-latest
    timeout-minutes: 60
    env:
      BUILD_TYPE: Debug
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      VCPKG_FEATURE_FLAGS: "manifests,registries,versions,binarycaching"
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          persist-credentials: true
          clean: true
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Setup Visual Studio environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Cache vcpkg
        uses: actions/cache@v4
        id: vcpkg-cache
        with:
          path: |
            ${{ github.workspace }}/vcpkg
            !${{ github.workspace }}/vcpkg/buildtrees
            !${{ github.workspace }}/vcpkg/packages
            !${{ github.workspace }}/vcpkg/downloads
          key: ${{ runner.os }}-vs-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vs-vcpkg-

      - name: Setup vcpkg
        if: steps.vcpkg-cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat

      - name: Check component systems availability
        shell: powershell
        run: |
          Write-Host "Checking for component systems..."

          if (Test-Path "../thread_system") {
            Write-Host "✅ thread_system found"
            echo "THREAD_SYSTEM_AVAILABLE=true" >> $env:GITHUB_ENV
          } else {
            Write-Host "❌ thread_system not found - using headers only"
            echo "THREAD_SYSTEM_AVAILABLE=false" >> $env:GITHUB_ENV
          }

          if (Test-Path "../logger_system") {
            Write-Host "✅ logger_system found"
            echo "LOGGER_SYSTEM_AVAILABLE=true" >> $env:GITHUB_ENV
          } else {
            Write-Host "❌ logger_system not found - using headers only"
            echo "LOGGER_SYSTEM_AVAILABLE=false" >> $env:GITHUB_ENV
          }

          if (Test-Path "../monitoring_system") {
            Write-Host "✅ monitoring_system found"
            echo "MONITORING_SYSTEM_AVAILABLE=true" >> $env:GITHUB_ENV
          } else {
            Write-Host "❌ monitoring_system not found - using headers only"
            echo "MONITORING_SYSTEM_AVAILABLE=false" >> $env:GITHUB_ENV
          }

      - name: Configure CMake for Visual Studio
        run: |
          mkdir build
          cd build
          cmake .. `
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} `
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake `
            -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_DEFAULT_TRIPLET }} `
            -DBUILD_TESTS=ON `
            -DBUILD_EXAMPLES=ON `
            -DENABLE_SANITIZERS=OFF `
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON `
            -G "Visual Studio 17 2022" `
            -A x64

      - name: Build with Visual Studio
        run: |
          cd build
          cmake --build . --config ${{ env.BUILD_TYPE }} --parallel

      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure --verbose -C ${{ env.BUILD_TYPE }}

      - name: Build Examples
        run: |
          cd build
          Write-Host "Building example applications with Visual Studio..."
          if (Test-Path "examples/${{ env.BUILD_TYPE }}/simple_tasks.exe") {
            Write-Host "✅ simple_tasks example built successfully"
          }
          if (Test-Path "examples/${{ env.BUILD_TYPE }}/hello_thread.exe") {
            Write-Host "✅ hello_thread example built successfully"
          }

      - name: Check Integration Status
        shell: powershell
        run: |
          cd build
          Write-Host "=== Integration Build Status (Visual Studio) ==="
          if (Test-Path "${{ env.BUILD_TYPE }}\integrated_thread_system.lib") {
            Write-Host "✅ Library: integrated_thread_system.lib found"
          } else {
            Write-Host "❌ Library not found"
          }

          Write-Host "Examples:"
          Get-ChildItem -Path "examples\${{ env.BUILD_TYPE }}" -ErrorAction SilentlyContinue | ForEach-Object { Write-Host "  - $($_.Name)" }

          Write-Host "Tests:"
          Get-ChildItem -Path "*test*" -ErrorAction SilentlyContinue | ForEach-Object { Write-Host "  - $($_.Name)" }

      - name: System Information
        shell: powershell
        run: |
          Write-Host "=== System Information ==="
          Write-Host "Visual Studio Version: $((Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\VisualStudio\SxS\VS7" -Name "17.0" -ErrorAction SilentlyContinue)."17.0")"
          Write-Host "CMake Version: $(cmake --version | Select-String "version" | Select-Object -First 1)"
          Write-Host "CPU: $((Get-WmiObject -Class Win32_Processor).Name)"
          Write-Host "Memory: $([math]::Round((Get-WmiObject -Class Win32_ComputerSystem).TotalPhysicalMemory / 1GB, 2)) GB"
          Write-Host "Build completed successfully with Visual Studio! ✅"