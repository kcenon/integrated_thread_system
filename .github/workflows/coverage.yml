name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-22.04
    timeout-minutes: 45

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        persist-credentials: true
        clean: true
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout common_system dependency
      uses: actions/checkout@v4
      with:
        repository: kcenon/common_system
        path: common_system
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout thread_system dependency
      uses: actions/checkout@v4
      with:
        repository: kcenon/thread_system
        path: thread_system
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout logger_system dependency
      uses: actions/checkout@v4
      with:
        repository: kcenon/logger_system
        path: logger_system
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout monitoring_system dependency
      uses: actions/checkout@v4
      with:
        repository: kcenon/monitoring_system
        path: monitoring_system
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake build-essential ninja-build gcc g++
        sudo apt install -y libgtest-dev libgmock-dev
        sudo apt install -y libfmt-dev nlohmann-json3-dev
        sudo apt install -y lcov gcovr

    - name: Configure CMake with coverage
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DBUILD_TESTS=ON \
          -DBUILD_EXAMPLES=OFF \
          -DINTEGRATED_ENABLE_COVERAGE=ON \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++ \
          -DCMAKE_C_FLAGS="--coverage -fprofile-arcs -ftest-coverage" \
          -DCMAKE_CXX_FLAGS="--coverage -fprofile-arcs -ftest-coverage" \
          -DCMAKE_EXE_LINKER_FLAGS="--coverage"

    - name: Build with coverage
      run: |
        cd build
        cmake --build . --parallel

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure || true

    - name: Generate coverage report
      run: |
        cd build
        # Generate lcov coverage report
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' '*/vcpkg_installed/*' '*/tests/*' '*/examples/*' --output-file coverage_filtered.info
        lcov --list coverage_filtered.info

    - name: Generate HTML coverage report
      run: |
        cd build
        genhtml coverage_filtered.info --output-directory coverage_html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./build/coverage_filtered.info
        flags: unittests
        name: codecov-integrated-thread-system
        fail_ci_if_error: false
        verbose: true

    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: build/coverage_html/
        retention-days: 30

    - name: Coverage summary
      run: |
        cd build
        echo "Coverage Report Summary"
        echo "======================="
        lcov --summary coverage_filtered.info
